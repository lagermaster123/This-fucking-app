const Order = require("../models/Order")
const XMLWriter = require('xml-writer')
const axios = require('axios')

module.exports.getOrders = async (req, res) => {
    const orders = await Order.find({}).populate('customer')
    const data = orders.map(o => { return { 
        id: o._id.toString(),
        paymentId: o.paymentId,
        receiptUrl: o.receiptUrl,
        orderId: o.orderId,
        dateCreated: o.dateCreated,
        amount: o.amount,
        items: o.items,
        status: o.status,
        customer: `${o.customer.firstName} ${o.customer.lastName}`
    }})
    res.json(data)
}

module.exports.completeOrder = async (req, res) => {
    const order = await Order.findOne({ _id: req.body.order.id })
    if (order.items) {
        order.items.map(item => {
            if(item._id.toString() === req.body.item._id) {
                item.status = 'completed'
            }
            if(!order.items.filter(i => i.status === 'open').length) {
                order.status = 'completed'
            }
        })
    }
    await order.save()
    const payload = await Order.find({})
    res.json({ message: 'success', payload })
}

module.exports.undoOrder = async (req, res) => {
    const order = await Order.findOne({ _id: req.body.order.id })
    if (order.items) {
        order.items.map(item => {
            if(item._id.toString() === req.body.item._id) {
                item.status = 'open'
            }
            if(order.items.filter(i => i.status === 'open').length > 0) {
                order.status = 'open'
            }
        })
    }
    await order.save()
    const payload = await Order.find({})
    res.json({ message: 'success', payload })
}

module.exports.deleteOrder = async (req, res) => {
    await Order.findOneAndDelete({ _id: req.body.order.id })
    const payload = await Order.find({})
    res.json({ message: 'success', payload })
}

module.exports.printTag = async(req, res) => {
    console.log(req.body.item)
    const payload = new XMLWriter
    payload.startDocument()
        payload.startElement('eVSRequest')
            payload.writeAttribute('USERID', '995MPPRO5353')
            payload.startElement('ImageParameters')
                payload.startElement('LabelSequence')
                    payload.startElement('PackageNumber')
                        payload.text('1')
                    payload.endElement('PackageNumber')
                    payload.startElement('TotalPackages')
                        payload.text('1')
                    payload.endElement('TotalPackages')
                payload.endElement('LabelSequence')
            payload.endElement('ImageParameters')
            payload.startElement('FromName')
                payload.text('Lina Smith')
            payload.endElement('FromName')
            payload.startElement('FromFirm')
                payload.text('Horizon')
            payload.endElement('FromFirm')
            payload.startElement('FromAddress1')
                payload.text('Apt 303')
            payload.endElement('FromAddress1')
            payload.startElement('FromAddress2')
                payload.text('1309 S Agnew Avenue')
            payload.endElement('FromAddress2')
            payload.startElement('FromCity')
                payload.text('Oklahoma City')
            payload.endElement('FromCity')
            payload.startElement('FromState')
                payload.text('OK')
            payload.endElement('FromState')
            payload.startElement('FromZip5')
                payload.text('73108')
            payload.endElement('FromZip5')
            payload.startElement('FromZip4')
                payload.text('2427')
            payload.endElement('FromZip4')
            payload.startElement('FromPhone')
                payload.text('1234567890')
            payload.endElement('FromPhone')
            payload.startElement('AllowNonCleansedOriginAddr')
                payload.text('false')
            payload.endElement('AllowNonCleansedOriginAddr')
            payload.startElement('ToName')
                payload.text('Tall Tom')
            payload.endElement('ToName')
            payload.startElement('ToFirm')
                payload.text('ABC Corp')
            payload.endElement('ToFirm')
            payload.startElement('ToAddress2')
                payload.text('1098 N Fraser Street')
            payload.endElement('ToAddress2')
            payload.startElement('ToCity')
                payload.text('Georgetown')
            payload.endElement('ToCity')
            payload.startElement('ToState')
                payload.text('SC')
            payload.endElement('ToState')
            payload.startElement('ToZip5')
                payload.text('29440')
            payload.endElement('ToZip5')
            payload.startElement('ToZip4')
                payload.text('2849')
            payload.endElement('ToZip4')
            payload.startElement('ToPhone')
                payload.text('8005554526')
            payload.endElement('ToPhone')
            payload.startElement('ToContactPreference')
                payload.text('email')
            payload.endElement('ToContactPreference')
            payload.startElement('ToContactEMail')
                payload.text('talltom@aol.com')
            payload.endElement('ToContactEMail')
            payload.startElement('AllowNonCleansedDestAddr')
                payload.text('false')
            payload.endElement('AllowNonCleansedDestAddr')
            payload.startElement('WeightInOunces')
                payload.text('32')
            payload.endElement('WeightInOunces')
            payload.startElement('ServiceType')
                payload.text('PRIORITY')
            payload.endElement('ServiceType')
            payload.startElement('Container')
                payload.text('VARIABLE')
            payload.endElement('Container')
            payload.startElement('Width')
                payload.text('5.5')
            payload.endElement('Width')
            payload.startElement('Length')
                payload.text('11')
            payload.endElement('Length')
            payload.startElement('Height')
                payload.text('11')
            payload.endElement('Height')
            payload.startElement('Machinable')
                payload.text('TRUE')
            payload.endElement('Machinable')
            payload.startElement('InsuredAmount')
                payload.text('100.00')
            payload.endElement('InsuredAmount')
            payload.startElement('AddressServiceREquested')
                payload.text('true')
            payload.endElement('AddressServiceREquested')
            payload.startElement('CustomerRefNo')
                payload.text('EF789UJK')
            payload.endElement('CustomerRefNo')
            payload.startElement('CustomerRefNo2')
                payload.text('EE66GG87')
            payload.endElement('CustomerRefNo2')
            payload.startElement('ExtraServices')
                payload.startElement('ExtraService')
                    payload.text('120')
                payload.endElement('ExtraService')
            payload.endElement('ExtraServices')
            payload.startElement('CRID')
                payload.text('4569873')
            payload.endElement('CRID')
            payload.startElement('MID')
                payload.text('456789354')
            payload.endElement('MID')
            payload.startElement('VendorCode')
                payload.text('1234')
            payload.endElement('VendorCode')
            payload.startElement('VendorProductVersionNumber')
                payload.text('5.02.1B')
            payload.endElement('VendorProductVersionNumber')
            payload.startElement('SenderName')
                payload.text('Adam Johnson')
            payload.endElement('SenderName')
            payload.startElement('SenderEMail')
                payload.text('Adam1234d@aol.com')
            payload.endElement('SenderEMail')
            payload.startElement('RecipientName')
                payload.text('Robert Jones')
            payload.endElement('RecipientName')
            payload.startElement('RecipientEMail')
                payload.text('bobjones@aol.com')
            payload.endElement('RecipientEMail')
            payload.startElement('RecipientOption')
                payload.text('SAME PAGE')
            payload.endElement('RecipientOption')
            payload.startElement('ImageType')
                payload.text('PDF')
            payload.endElement('ImageType')
            payload.startElement('HoldForManifest')
                payload.text('N')
            payload.endElement('HoldForManifest')
            payload.startElement('NineDigitRoutingZip')
                payload.text('false')
            payload.endElement('NineDigitRoutingZip')
            payload.startElement('ShipInfo')
                payload.text('True')
            payload.endElement('ShipInfo')
            payload.startElement('CarrierRelease')
                payload.text('False')
            payload.endElement('CarrierRelease')
            payload.startElement('ReturnCommitments')
                payload.text('True')
            payload.endElement('ReturnCommitments')
            payload.startElement('PrintCustomerRefNo')
                payload.text('False')
            payload.endElement('PrintCustomerRefNo')
            payload.startElement('PrintCustomerRefNo2')
                payload.text('True')
            payload.endElement('PrintCustomerRefNo2')
            payload.startElement('Content')
                payload.startElement('ContentType')
                    payload.text('Perishable')
                payload.endElement('ContentType')
                payload.startElement('ContentDescription')
                    payload.text('Other')
                payload.endElement('ContentDescription')
            payload.endElement('Content')
            payload.startElement('ActionCode')
                payload.text('M0')
            payload.endElement('ActionCode')
            payload.startElement('OptOutOfSPE')
                payload.text('false')
            payload.endElement('OptOutOfSPE')
        payload.endElement('eVSRequest')
    payload.endDocument()
    await axios({
        method: 'GET',
        url: 'https://secure.shippingapis.com/ShippingAPI.dll?API=eVS&XML=' + payload.toString()
    }).then( res => console.log(res))
}